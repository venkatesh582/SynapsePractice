{
	"name": "Dataflow",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "DS_Parquetbronze",
						"type": "DatasetReference"
					},
					"name": "sourcebronze"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "DS_SilverParquet",
						"type": "DatasetReference"
					},
					"name": "Silver"
				}
			],
			"transformations": [
				{
					"name": "Filtergreaterthanequalto100"
				},
				{
					"name": "Adddomain"
				},
				{
					"name": "getonlydomain"
				}
			],
			"scriptLines": [
				"source(output(",
				"          OrderID as string,",
				"          OrderDate as date,",
				"          CustomerID as string,",
				"          CustomerName as string,",
				"          CustomerEmail as string,",
				"          ProductID as string,",
				"          ProductName as string,",
				"          ProductCategory as string,",
				"          RegionID as string,",
				"          RegionName as string,",
				"          Country as string,",
				"          Quantity as long,",
				"          UnitPrice as long,",
				"          TotalAmount as long",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     format: 'parquet') ~> sourcebronze",
				"sourcebronze filter(UnitPrice >= 100) ~> Filtergreaterthanequalto100",
				"Filtergreaterthanequalto100 derive(Domain = split(CustomerEmail, '@')) ~> Adddomain",
				"Adddomain derive(Domain = slice(Domain,2)[1]) ~> getonlydomain",
				"getonlydomain sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'parquet',",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> Silver"
			]
		}
	}
}